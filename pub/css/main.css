.guide {
  padding: 20px 0 0 0;
}
.guide > .sections {
  padding: 20px;
}
.guide > .sections > .section {
  width: 33%;
  float: left;
}
.guide > .sections > .section > .title {
  font-family: Work Sans;
  font-size: 26px;
  padding: 0 0 0 10px;
  color: #000;
}
.guide > .sections > .section > .color {
  padding: 10px 20px;
  margin: 5px;
  color: #fff;
}
.guide > .sections > .section > .color.color_black1 {
  background-color: #000;
  border: 1px solid #fff;
  color: #fff;
}
.guide > .sections > .section > .color.color_black2 {
  background-color: #999;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .section > .color.color_white1 {
  background-color: #fff;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .section > .color.color_teal1 {
  background-color: #55c7c0;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .section > .color.color_teal2 {
  background-color: #223844;
  border: 1px solid #fff;
  color: #fff;
}
.guide > .sections > .section > .color.color_teal3 {
  background-color: #9ffff9;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .section > .font {
  padding: 10px 20px;
  overflow-x: scroll;
  color: #000;
}
.guide > .sections > .section > .font.font_copy1 {
  font-family: Work Sans;
  font-size: 15px;
  line-height: 22px;
  font-weight: 300;
}
.guide > .sections > .section > .font.font_h1 {
  font-family: Work Sans;
  font-size: 26px;
}
header {
  background-color: #ffc0cb;
}
@-moz-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@-o-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@-moz-keyframes charIn {
  from {
    opacity: 0;
    transform: perspective(200px) rotateY(90deg);
  }
  to {
    opacity: 1;
    transform: perspective(200px) rotateY(0deg);
  }
}
@-webkit-keyframes charIn {
  from {
    opacity: 0;
    transform: perspective(200px) rotateY(90deg);
  }
  to {
    opacity: 1;
    transform: perspective(200px) rotateY(0deg);
  }
}
@-o-keyframes charIn {
  from {
    opacity: 0;
    transform: perspective(200px) rotateY(90deg);
  }
  to {
    opacity: 1;
    transform: perspective(200px) rotateY(0deg);
  }
}
@keyframes charIn {
  from {
    opacity: 0;
    transform: perspective(200px) rotateY(90deg);
  }
  to {
    opacity: 1;
    transform: perspective(200px) rotateY(0deg);
  }
}
@-moz-keyframes cellInY {
  from {
    transform: translate(0, 10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes cellInY {
  from {
    transform: translate(0, 10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes cellInY {
  from {
    transform: translate(0, 10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes cellInY {
  from {
    transform: translate(0, 10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-moz-keyframes cellOutY {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes cellOutY {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes cellOutY {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes cellOutY {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-moz-keyframes cellInX {
  from {
    transform: translate(10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes cellInX {
  from {
    transform: translate(10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes cellInX {
  from {
    transform: translate(10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes cellInX {
  from {
    transform: translate(10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-moz-keyframes cellOutY {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes cellOutY {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes cellOutY {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes cellOutY {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-moz-keyframes cellOutX {
  from {
    transform: translate(-10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes cellOutX {
  from {
    transform: translate(-10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes cellOutX {
  from {
    transform: translate(-10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes cellOutX {
  from {
    transform: translate(-10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
.clear {
  zoom: 1;
}
.clear:before,
.clear:after {
  content: "";
  display: table;
}
.clear:after {
  clear: both;
}
body {
  padding: 0;
  margin: 0;
  font-family: Work Sans;
  font-size: 15px;
  line-height: 22px;
  font-weight: 300;
}
.container {
  width: 100vw;
  height: 100vh;
  position: absolute;
  overflow: hidden;
}
.border {
  position: absolute;
  background-color: #55c7c0;
}
.border.vert {
  height: 12px;
  width: 100vw;
}
.border.horiz {
  width: 12px;
  height: 100vh;
}
.border.top {
  top: 0px;
}
.border.bottom {
  bottom: 0px;
}
.border.left {
  left: 0px;
}
.border.right {
  right: 0px;
}
.colors {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.colors > .cyan {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("/img/background.jpg");
  -webkit-background-size: cover;
  -moz-background-size: cover;
  background-size: cover;
}
.colors > .star > svg > polygon {
  fill: #55c7c0;
}
.blend-multiply {
  mix-blend-mode: multiply;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.blend-multiply > .video {
  position: absolute;
  top: 35%;
  left: 35%;
  width: 20%;
  height: 20%;
  background-color: #fff;
}
.blend-multiply > .video > video {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
}
.blend-multiply > .blend-screen {
  mix-blend-mode: screen;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #fff;
  text-align: center;
  font-family: Work Sans;
  font-size: 26px;
}
.star {
  position: absolute;
  width: 500px;
  height: 500px;
  top: 50%;
  left: 50%;
  margin-top: -250px;
  margin-left: 50px;
}
.star > svg {
  width: inherit;
  height: inherit;
}
.star > svg > polygon {
  fill: #000;
}
.star > svg > polygon:nth-child(1) {
  -webkit-animation: fadeIn 0.5s ease-in-out both;
  -moz-animation: fadeIn 0.5s ease-in-out both;
  -o-animation: fadeIn 0.5s ease-in-out both;
  -ms-animation: fadeIn 0.5s ease-in-out both;
  animation: fadeIn 0.5s ease-in-out both;
  -webkit-animation-delay: 1s;
  -moz-animation-delay: 1s;
  -o-animation-delay: 1s;
  -ms-animation-delay: 1s;
  animation-delay: 1s;
}
.star > svg > polygon:nth-child(2) {
  -webkit-animation: fadeIn 0.5s ease-in-out both;
  -moz-animation: fadeIn 0.5s ease-in-out both;
  -o-animation: fadeIn 0.5s ease-in-out both;
  -ms-animation: fadeIn 0.5s ease-in-out both;
  animation: fadeIn 0.5s ease-in-out both;
  -webkit-animation-delay: 1.5s;
  -moz-animation-delay: 1.5s;
  -o-animation-delay: 1.5s;
  -ms-animation-delay: 1.5s;
  animation-delay: 1.5s;
}
.star > svg > polygon:nth-child(3) {
  -webkit-animation: fadeIn 0.5s ease-in-out both;
  -moz-animation: fadeIn 0.5s ease-in-out both;
  -o-animation: fadeIn 0.5s ease-in-out both;
  -ms-animation: fadeIn 0.5s ease-in-out both;
  animation: fadeIn 0.5s ease-in-out both;
  -webkit-animation-delay: 2s;
  -moz-animation-delay: 2s;
  -o-animation-delay: 2s;
  -ms-animation-delay: 2s;
  animation-delay: 2s;
}
.content {
  position: absolute;
  width: 300px;
  height: 400px;
  top: 50%;
  left: 50%;
  margin-top: -150px;
  margin-left: -300px;
}
.content > .inner {
  position: relative;
  width: 100%;
  height: 100%;
}
.content > .inner > .logo {
  height: 40px;
  -webkit-animation: fadeIn 0.5s ease-in-out both;
  -moz-animation: fadeIn 0.5s ease-in-out both;
  -o-animation: fadeIn 0.5s ease-in-out both;
  -ms-animation: fadeIn 0.5s ease-in-out both;
  animation: fadeIn 0.5s ease-in-out both;
  -webkit-animation-delay: 1.6s;
  -moz-animation-delay: 1.6s;
  -o-animation-delay: 1.6s;
  -ms-animation-delay: 1.6s;
  animation-delay: 1.6s;
}
.content > .inner > .logo > svg {
  height: inherit;
}
.content > .inner > .pronounce {
  margin: 20px 0;
  color: #999;
  -webkit-animation: fadeIn 0.5s ease-in-out both;
  -moz-animation: fadeIn 0.5s ease-in-out both;
  -o-animation: fadeIn 0.5s ease-in-out both;
  -ms-animation: fadeIn 0.5s ease-in-out both;
  animation: fadeIn 0.5s ease-in-out both;
  -webkit-animation-delay: 1.7s;
  -moz-animation-delay: 1.7s;
  -o-animation-delay: 1.7s;
  -ms-animation-delay: 1.7s;
  animation-delay: 1.7s;
}
.content > .inner > .define {
  color: #fff;
  margin: 0 0 20px 0;
  -webkit-animation: fadeIn 0.5s ease-in-out both;
  -moz-animation: fadeIn 0.5s ease-in-out both;
  -o-animation: fadeIn 0.5s ease-in-out both;
  -ms-animation: fadeIn 0.5s ease-in-out both;
  animation: fadeIn 0.5s ease-in-out both;
  -webkit-animation-delay: 1.8s;
  -moz-animation-delay: 1.8s;
  -o-animation-delay: 1.8s;
  -ms-animation-delay: 1.8s;
  animation-delay: 1.8s;
}
.content > .inner > .define.second {
  -webkit-animation-delay: 1.9s;
  -moz-animation-delay: 1.9s;
  -o-animation-delay: 1.9s;
  -ms-animation-delay: 1.9s;
  animation-delay: 1.9s;
}
.content > .inner > .bottom {
  position: absolute;
  bottom: 0;
  -webkit-animation: fadeIn 0.5s ease-in-out both;
  -moz-animation: fadeIn 0.5s ease-in-out both;
  -o-animation: fadeIn 0.5s ease-in-out both;
  -ms-animation: fadeIn 0.5s ease-in-out both;
  animation: fadeIn 0.5s ease-in-out both;
  -webkit-animation-delay: 2s;
  -moz-animation-delay: 2s;
  -o-animation-delay: 2s;
  -ms-animation-delay: 2s;
  animation-delay: 2s;
}
.content > .inner > .bottom > .line {
  width: 64px;
  height: 4px;
  background-color: #fff;
}
.content > .inner > .bottom > .email {
  margin: 20px 0 0 0;
  text-decoration: none;
}
.content > .inner > .bottom > .email > input {
  font-family: Work Sans;
  font-size: 15px;
  line-height: 22px;
  font-weight: 300;
  border: none;
  background-color: transparent;
  color: #55c7c0;
  outline: none;
}
.content > .inner > .bottom > .email > input *:active {
  outline: none;
}
@media all and (min-width: 1px) and (max-width: 1000px) {
  .star {
    display: none;
  }
  .content {
    width: 250px;
    height: 400px;
    margin-left: -125px;
    margin-top: -200px;
  }
}
@-moz-keyframes fadeIn {
  from {
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
  to {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
  to {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
@-o-keyframes fadeIn {
  from {
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
  to {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
  to {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
::selection {
  color: #fff;
  background-color: #55c7c0;
}

/*# sourceMappingURL=data:application/json;base64, */
