var Index, onYouTubeIframeAPIReady;

Index = {
  player: false,
  states: {
    '-1': 'unstarted',
    0: 'ended',
    1: 'playing',
    2: 'paused',
    3: 'buffering',
    5: 'video cued'
  },
  i: function() {
    console.log('Index.i()');
    return Index.ytApi();
  },
  ytApi: function() {
    var first, tag;
    tag = document.createElement('script');
    tag.src = 'https://www.youtube.com/iframe_api';
    tag.type = 'text/javascript';
    tag.async = true;
    first = document.getElementsByTagName('script')[0];
    return first.parentNode.insertBefore(tag, first);
  },
  ready: function(event) {
    var height, width;
    console.log('youtube is ready');
    width = '100%';
    height = '100%';
    return Index.player = new YT.Player('video', {
      width: width,
      height: height,
      videoId: 'ZNxIDWFVNVc',
      events: {
        onReady: Index.playerReady,
        onStateChange: Index.stateChange
      },
      playerVars: {
        allowfullscreen: 1,
        modestbranding: 1,
        enablejsapi: 1,
        origin: Index.origin,
        version: 3,
        rel: 0,
        disablekb: 1,
        loop: 1,
        html5: 1,
        controls: 0,
        theme: 'light',
        wmode: 'opaque'
      }
    });
  },
  playerReady: function(event) {
    return setTimeout(function() {
      return Index.player.playVideo();
    }, 100);
  },
  stateChange: function(event) {
    return Index.cstate = Index.states[event.data];
  }
};

onYouTubeIframeAPIReady = function(event) {
  return Index.ready(event);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLEtBQUEsR0FDRTtFQUFBLE1BQUEsRUFBUSxLQUFSO0VBRUEsTUFBQSxFQUNFO0lBQUEsSUFBQSxFQUFNLFdBQU47SUFDQSxDQUFBLEVBQUcsT0FESDtJQUVBLENBQUEsRUFBRyxTQUZIO0lBR0EsQ0FBQSxFQUFHLFFBSEg7SUFJQSxDQUFBLEVBQUcsV0FKSDtJQUtBLENBQUEsRUFBRyxZQUxIO0dBSEY7RUFVQSxDQUFBLEVBQUcsU0FBQTtJQUVELE9BQU8sQ0FBQyxHQUFSLENBQVksV0FBWjtXQUNBLEtBQUssQ0FBQyxLQUFOLENBQUE7RUFIQyxDQVZIO0VBZUEsS0FBQSxFQUFPLFNBQUE7QUFDTCxRQUFBO0lBQUEsR0FBQSxHQUFNLFFBQVEsQ0FBQyxhQUFULENBQXVCLFFBQXZCO0lBQ04sR0FBRyxDQUFDLEdBQUosR0FBVTtJQUNWLEdBQUcsQ0FBQyxJQUFKLEdBQVc7SUFDWCxHQUFHLENBQUMsS0FBSixHQUFZO0lBQ1osS0FBQSxHQUFRLFFBQVEsQ0FBQyxvQkFBVCxDQUE4QixRQUE5QixDQUF3QyxDQUFBLENBQUE7V0FDaEQsS0FBSyxDQUFDLFVBQVUsQ0FBQyxZQUFqQixDQUE4QixHQUE5QixFQUFtQyxLQUFuQztFQU5LLENBZlA7RUF1QkEsS0FBQSxFQUFPLFNBQUMsS0FBRDtBQUNMLFFBQUE7SUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLGtCQUFaO0lBRUEsS0FBQSxHQUFRO0lBQ1IsTUFBQSxHQUFTO1dBRVQsS0FBSyxDQUFDLE1BQU4sR0FBbUIsSUFBQSxFQUFFLENBQUMsTUFBSCxDQUFVLE9BQVYsRUFDakI7TUFBQSxLQUFBLEVBQU8sS0FBUDtNQUNBLE1BQUEsRUFBUSxNQURSO01BRUEsT0FBQSxFQUFTLGFBRlQ7TUFHQSxNQUFBLEVBQ0U7UUFBQSxPQUFBLEVBQVMsS0FBSyxDQUFDLFdBQWY7UUFDQSxhQUFBLEVBQWUsS0FBSyxDQUFDLFdBRHJCO09BSkY7TUFNQSxVQUFBLEVBQ0U7UUFBQSxlQUFBLEVBQWlCLENBQWpCO1FBQ0EsY0FBQSxFQUFnQixDQURoQjtRQUVBLFdBQUEsRUFBYSxDQUZiO1FBR0EsTUFBQSxFQUFRLEtBQUssQ0FBQyxNQUhkO1FBSUEsT0FBQSxFQUFTLENBSlQ7UUFLQSxHQUFBLEVBQUssQ0FMTDtRQU1BLFNBQUEsRUFBVyxDQU5YO1FBT0EsSUFBQSxFQUFNLENBUE47UUFRQSxLQUFBLEVBQU8sQ0FSUDtRQVNBLFFBQUEsRUFBVSxDQVRWO1FBVUEsS0FBQSxFQUFPLE9BVlA7UUFXQSxLQUFBLEVBQU8sUUFYUDtPQVBGO0tBRGlCO0VBTmQsQ0F2QlA7RUFtREEsV0FBQSxFQUFhLFNBQUMsS0FBRDtXQUNYLFVBQUEsQ0FBVyxTQUFBO2FBQ1QsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFiLENBQUE7SUFEUyxDQUFYLEVBR0UsR0FIRjtFQURXLENBbkRiO0VBd0RBLFdBQUEsRUFBYSxTQUFDLEtBQUQ7V0FDWCxLQUFLLENBQUMsTUFBTixHQUFlLEtBQUssQ0FBQyxNQUFPLENBQUEsS0FBSyxDQUFDLElBQU47RUFEakIsQ0F4RGI7OztBQThERix1QkFBQSxHQUEwQixTQUFDLEtBQUQ7U0FDeEIsS0FBSyxDQUFDLEtBQU4sQ0FBWSxLQUFaO0FBRHdCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiSW5kZXggPVxuICBwbGF5ZXI6IGZhbHNlXG5cbiAgc3RhdGVzOlxuICAgICctMSc6ICd1bnN0YXJ0ZWQnLFxuICAgIDA6ICdlbmRlZCcsXG4gICAgMTogJ3BsYXlpbmcnLFxuICAgIDI6ICdwYXVzZWQnLFxuICAgIDM6ICdidWZmZXJpbmcnLFxuICAgIDU6ICd2aWRlbyBjdWVkJ1xuXG4gIGk6IC0+XG5cbiAgICBjb25zb2xlLmxvZyAnSW5kZXguaSgpJ1xuICAgIEluZGV4Lnl0QXBpKClcblxuICB5dEFwaTogLT5cbiAgICB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50ICdzY3JpcHQnXG4gICAgdGFnLnNyYyA9ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9pZnJhbWVfYXBpJ1xuICAgIHRhZy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCdcbiAgICB0YWcuYXN5bmMgPSB0cnVlXG4gICAgZmlyc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF1cbiAgICBmaXJzdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSB0YWcsIGZpcnN0XG5cbiAgcmVhZHk6IChldmVudCkgLT5cbiAgICBjb25zb2xlLmxvZyAneW91dHViZSBpcyByZWFkeSdcblxuICAgIHdpZHRoID0gJzEwMCUnXG4gICAgaGVpZ2h0ID0gJzEwMCUnXG5cbiAgICBJbmRleC5wbGF5ZXIgPSBuZXcgWVQuUGxheWVyKCd2aWRlbycsXG4gICAgICB3aWR0aDogd2lkdGhcbiAgICAgIGhlaWdodDogaGVpZ2h0XG4gICAgICB2aWRlb0lkOiAnWk54SURXRlZOVmMnXG4gICAgICBldmVudHM6XG4gICAgICAgIG9uUmVhZHk6IEluZGV4LnBsYXllclJlYWR5XG4gICAgICAgIG9uU3RhdGVDaGFuZ2U6IEluZGV4LnN0YXRlQ2hhbmdlXG4gICAgICBwbGF5ZXJWYXJzOlxuICAgICAgICBhbGxvd2Z1bGxzY3JlZW46IDFcbiAgICAgICAgbW9kZXN0YnJhbmRpbmc6IDFcbiAgICAgICAgZW5hYmxlanNhcGk6IDFcbiAgICAgICAgb3JpZ2luOiBJbmRleC5vcmlnaW5cbiAgICAgICAgdmVyc2lvbjogM1xuICAgICAgICByZWw6IDBcbiAgICAgICAgZGlzYWJsZWtiOiAxXG4gICAgICAgIGxvb3A6IDFcbiAgICAgICAgaHRtbDU6IDFcbiAgICAgICAgY29udHJvbHM6IDBcbiAgICAgICAgdGhlbWU6ICdsaWdodCdcbiAgICAgICAgd21vZGU6ICdvcGFxdWUnXG4gICAgKVxuXG4gIHBsYXllclJlYWR5OiAoZXZlbnQpIC0+XG4gICAgc2V0VGltZW91dCAtPlxuICAgICAgSW5kZXgucGxheWVyLnBsYXlWaWRlbygpXG4gICAgICAjSW5kZXgucGxheWVyLm11dGUoKVxuICAgICwgMTAwXG4gIHN0YXRlQ2hhbmdlOiAoZXZlbnQpIC0+XG4gICAgSW5kZXguY3N0YXRlID0gSW5kZXguc3RhdGVzW2V2ZW50LmRhdGFdXG4gICAgI18udCAnRGV0YWlscycsIHdhdGNoLmNzdGF0ZSwgd2F0Y2gudGl0bGVcblxuXG5cbm9uWW91VHViZUlmcmFtZUFQSVJlYWR5ID0gKGV2ZW50KSAtPlxuICBJbmRleC5yZWFkeShldmVudClcblxuIl19
