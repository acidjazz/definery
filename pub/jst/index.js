var Index, onYouTubeIframeAPIReady;

Index = {
  player: false,
  states: {
    '-1': 'unstarted',
    0: 'ended',
    1: 'playing',
    2: 'paused',
    3: 'buffering',
    5: 'video cued'
  },
  i: function() {
    return console.log('Index.i()');
  },
  ytApi: function() {
    var first, tag;
    tag = document.createElement('script');
    tag.src = 'https://www.youtube.com/iframe_api';
    tag.type = 'text/javascript';
    tag.async = true;
    first = document.getElementsByTagName('script')[0];
    return first.parentNode.insertBefore(tag, first);
  },
  ready: function(event) {
    var height, width;
    console.log('youtube is ready');
    width = '100%';
    height = '100%';
    return Index.player = new YT.Player('video', {
      width: width,
      height: height,
      videoId: 'ZNxIDWFVNVc',
      events: {
        onReady: Index.playerReady,
        onStateChange: Index.stateChange
      },
      playerVars: {
        allowfullscreen: 1,
        modestbranding: 1,
        enablejsapi: 1,
        origin: Index.origin,
        version: 3,
        rel: 0,
        disablekb: 1,
        loop: 1,
        controls: 0,
        theme: 'light',
        wmode: 'opaque'
      }
    });
  },
  playerReady: function(event) {
    return setTimeout(function() {
      return Index.player.playVideo();
    }, 100);
  },
  stateChange: function(event) {
    return Index.cstate = Index.states[event.data];
  }
};

onYouTubeIframeAPIReady = function(event) {
  return Index.ready(event);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLEtBQUEsR0FDRTtFQUFBLE1BQUEsRUFBUSxLQUFSO0VBRUEsTUFBQSxFQUNFO0lBQUEsSUFBQSxFQUFNLFdBQU47SUFDQSxDQUFBLEVBQUcsT0FESDtJQUVBLENBQUEsRUFBRyxTQUZIO0lBR0EsQ0FBQSxFQUFHLFFBSEg7SUFJQSxDQUFBLEVBQUcsV0FKSDtJQUtBLENBQUEsRUFBRyxZQUxIO0dBSEY7RUFVQSxDQUFBLEVBQUcsU0FBQTtXQUVELE9BQU8sQ0FBQyxHQUFSLENBQVksV0FBWjtFQUZDLENBVkg7RUFlQSxLQUFBLEVBQU8sU0FBQTtBQUNMLFFBQUE7SUFBQSxHQUFBLEdBQU0sUUFBUSxDQUFDLGFBQVQsQ0FBdUIsUUFBdkI7SUFDTixHQUFHLENBQUMsR0FBSixHQUFVO0lBQ1YsR0FBRyxDQUFDLElBQUosR0FBVztJQUNYLEdBQUcsQ0FBQyxLQUFKLEdBQVk7SUFDWixLQUFBLEdBQVEsUUFBUSxDQUFDLG9CQUFULENBQThCLFFBQTlCLENBQXdDLENBQUEsQ0FBQTtXQUNoRCxLQUFLLENBQUMsVUFBVSxDQUFDLFlBQWpCLENBQThCLEdBQTlCLEVBQW1DLEtBQW5DO0VBTkssQ0FmUDtFQXVCQSxLQUFBLEVBQU8sU0FBQyxLQUFEO0FBQ0wsUUFBQTtJQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksa0JBQVo7SUFFQSxLQUFBLEdBQVE7SUFDUixNQUFBLEdBQVM7V0FFVCxLQUFLLENBQUMsTUFBTixHQUFtQixJQUFBLEVBQUUsQ0FBQyxNQUFILENBQVUsT0FBVixFQUNqQjtNQUFBLEtBQUEsRUFBTyxLQUFQO01BQ0EsTUFBQSxFQUFRLE1BRFI7TUFFQSxPQUFBLEVBQVMsYUFGVDtNQUdBLE1BQUEsRUFDRTtRQUFBLE9BQUEsRUFBUyxLQUFLLENBQUMsV0FBZjtRQUNBLGFBQUEsRUFBZSxLQUFLLENBQUMsV0FEckI7T0FKRjtNQU1BLFVBQUEsRUFDRTtRQUFBLGVBQUEsRUFBaUIsQ0FBakI7UUFDQSxjQUFBLEVBQWdCLENBRGhCO1FBRUEsV0FBQSxFQUFhLENBRmI7UUFHQSxNQUFBLEVBQVEsS0FBSyxDQUFDLE1BSGQ7UUFJQSxPQUFBLEVBQVMsQ0FKVDtRQUtBLEdBQUEsRUFBSyxDQUxMO1FBTUEsU0FBQSxFQUFXLENBTlg7UUFPQSxJQUFBLEVBQU0sQ0FQTjtRQVFBLFFBQUEsRUFBVSxDQVJWO1FBU0EsS0FBQSxFQUFPLE9BVFA7UUFVQSxLQUFBLEVBQU8sUUFWUDtPQVBGO0tBRGlCO0VBTmQsQ0F2QlA7RUFrREEsV0FBQSxFQUFhLFNBQUMsS0FBRDtXQUNYLFVBQUEsQ0FBVyxTQUFBO2FBQ1QsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFiLENBQUE7SUFEUyxDQUFYLEVBR0UsR0FIRjtFQURXLENBbERiO0VBdURBLFdBQUEsRUFBYSxTQUFDLEtBQUQ7V0FDWCxLQUFLLENBQUMsTUFBTixHQUFlLEtBQUssQ0FBQyxNQUFPLENBQUEsS0FBSyxDQUFDLElBQU47RUFEakIsQ0F2RGI7OztBQTZERix1QkFBQSxHQUEwQixTQUFDLEtBQUQ7U0FDeEIsS0FBSyxDQUFDLEtBQU4sQ0FBWSxLQUFaO0FBRHdCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiSW5kZXggPVxuICBwbGF5ZXI6IGZhbHNlXG5cbiAgc3RhdGVzOlxuICAgICctMSc6ICd1bnN0YXJ0ZWQnLFxuICAgIDA6ICdlbmRlZCcsXG4gICAgMTogJ3BsYXlpbmcnLFxuICAgIDI6ICdwYXVzZWQnLFxuICAgIDM6ICdidWZmZXJpbmcnLFxuICAgIDU6ICd2aWRlbyBjdWVkJ1xuXG4gIGk6IC0+XG5cbiAgICBjb25zb2xlLmxvZyAnSW5kZXguaSgpJ1xuICAgICNJbmRleC55dEFwaSgpXG5cbiAgeXRBcGk6IC0+XG4gICAgdGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAnc2NyaXB0J1xuICAgIHRhZy5zcmMgPSAnaHR0cHM6Ly93d3cueW91dHViZS5jb20vaWZyYW1lX2FwaSdcbiAgICB0YWcudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnXG4gICAgdGFnLmFzeW5jID0gdHJ1ZVxuICAgIGZpcnN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdXG4gICAgZmlyc3QucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUgdGFnLCBmaXJzdFxuXG4gIHJlYWR5OiAoZXZlbnQpIC0+XG4gICAgY29uc29sZS5sb2cgJ3lvdXR1YmUgaXMgcmVhZHknXG5cbiAgICB3aWR0aCA9ICcxMDAlJ1xuICAgIGhlaWdodCA9ICcxMDAlJ1xuXG4gICAgSW5kZXgucGxheWVyID0gbmV3IFlULlBsYXllcigndmlkZW8nLFxuICAgICAgd2lkdGg6IHdpZHRoXG4gICAgICBoZWlnaHQ6IGhlaWdodFxuICAgICAgdmlkZW9JZDogJ1pOeElEV0ZWTlZjJ1xuICAgICAgZXZlbnRzOlxuICAgICAgICBvblJlYWR5OiBJbmRleC5wbGF5ZXJSZWFkeVxuICAgICAgICBvblN0YXRlQ2hhbmdlOiBJbmRleC5zdGF0ZUNoYW5nZVxuICAgICAgcGxheWVyVmFyczpcbiAgICAgICAgYWxsb3dmdWxsc2NyZWVuOiAxXG4gICAgICAgIG1vZGVzdGJyYW5kaW5nOiAxXG4gICAgICAgIGVuYWJsZWpzYXBpOiAxXG4gICAgICAgIG9yaWdpbjogSW5kZXgub3JpZ2luXG4gICAgICAgIHZlcnNpb246IDNcbiAgICAgICAgcmVsOiAwXG4gICAgICAgIGRpc2FibGVrYjogMVxuICAgICAgICBsb29wOiAxXG4gICAgICAgIGNvbnRyb2xzOiAwXG4gICAgICAgIHRoZW1lOiAnbGlnaHQnXG4gICAgICAgIHdtb2RlOiAnb3BhcXVlJ1xuICAgIClcblxuICBwbGF5ZXJSZWFkeTogKGV2ZW50KSAtPlxuICAgIHNldFRpbWVvdXQgLT5cbiAgICAgIEluZGV4LnBsYXllci5wbGF5VmlkZW8oKVxuICAgICAgI0luZGV4LnBsYXllci5tdXRlKClcbiAgICAsIDEwMFxuICBzdGF0ZUNoYW5nZTogKGV2ZW50KSAtPlxuICAgIEluZGV4LmNzdGF0ZSA9IEluZGV4LnN0YXRlc1tldmVudC5kYXRhXVxuICAgICNfLnQgJ0RldGFpbHMnLCB3YXRjaC5jc3RhdGUsIHdhdGNoLnRpdGxlXG5cblxuXG5vbllvdVR1YmVJZnJhbWVBUElSZWFkeSA9IChldmVudCkgLT5cbiAgSW5kZXgucmVhZHkoZXZlbnQpXG5cbiJdfQ==
