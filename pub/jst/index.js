var Index, onYouTubeIframeAPIReady;

Index = {
  player: false,
  states: {
    '-1': 'unstarted',
    0: 'ended',
    1: 'playing',
    2: 'paused',
    3: 'buffering',
    5: 'video cued'
  },
  i: function() {
    return console.log('Index.i()');
  },
  ytApi: function() {
    var first, tag;
    tag = document.createElement('script');
    tag.src = 'https://www.youtube.com/iframe_api';
    tag.type = 'text/javascript';
    tag.async = true;
    first = document.getElementsByTagName('script')[0];
    return first.parentNode.insertBefore(tag, first);
  },
  ready: function(event) {
    var height, width;
    console.log('youtube is ready');
    width = '100%';
    height = '100%';
    return Index.player = new YT.Player('video', {
      width: width,
      height: height,
      videoId: 'ZNxIDWFVNVc',
      events: {
        onReady: Index.playerReady,
        onStateChange: Index.stateChange
      },
      playerVars: {
        allowfullscreen: 1,
        modestbranding: 1,
        enablejsapi: 1,
        origin: Index.origin,
        version: 3,
        rel: 0,
        disablekb: 1,
        loop: 1,
        html5: 1,
        controls: 0,
        theme: 'light',
        wmode: 'opaque'
      }
    });
  },
  playerReady: function(event) {
    return setTimeout(function() {
      return Index.player.playVideo();
    }, 100);
  },
  stateChange: function(event) {
    return Index.cstate = Index.states[event.data];
  }
};

onYouTubeIframeAPIReady = function(event) {
  return Index.ready(event);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLEtBQUEsR0FDRTtFQUFBLE1BQUEsRUFBUSxLQUFSO0VBRUEsTUFBQSxFQUNFO0lBQUEsSUFBQSxFQUFNLFdBQU47SUFDQSxDQUFBLEVBQUcsT0FESDtJQUVBLENBQUEsRUFBRyxTQUZIO0lBR0EsQ0FBQSxFQUFHLFFBSEg7SUFJQSxDQUFBLEVBQUcsV0FKSDtJQUtBLENBQUEsRUFBRyxZQUxIO0dBSEY7RUFVQSxDQUFBLEVBQUcsU0FBQTtXQUVELE9BQU8sQ0FBQyxHQUFSLENBQVksV0FBWjtFQUZDLENBVkg7RUFlQSxLQUFBLEVBQU8sU0FBQTtBQUNMLFFBQUE7SUFBQSxHQUFBLEdBQU0sUUFBUSxDQUFDLGFBQVQsQ0FBdUIsUUFBdkI7SUFDTixHQUFHLENBQUMsR0FBSixHQUFVO0lBQ1YsR0FBRyxDQUFDLElBQUosR0FBVztJQUNYLEdBQUcsQ0FBQyxLQUFKLEdBQVk7SUFDWixLQUFBLEdBQVEsUUFBUSxDQUFDLG9CQUFULENBQThCLFFBQTlCLENBQXdDLENBQUEsQ0FBQTtXQUNoRCxLQUFLLENBQUMsVUFBVSxDQUFDLFlBQWpCLENBQThCLEdBQTlCLEVBQW1DLEtBQW5DO0VBTkssQ0FmUDtFQXVCQSxLQUFBLEVBQU8sU0FBQyxLQUFEO0FBQ0wsUUFBQTtJQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksa0JBQVo7SUFFQSxLQUFBLEdBQVE7SUFDUixNQUFBLEdBQVM7V0FFVCxLQUFLLENBQUMsTUFBTixHQUFtQixJQUFBLEVBQUUsQ0FBQyxNQUFILENBQVUsT0FBVixFQUNqQjtNQUFBLEtBQUEsRUFBTyxLQUFQO01BQ0EsTUFBQSxFQUFRLE1BRFI7TUFFQSxPQUFBLEVBQVMsYUFGVDtNQUdBLE1BQUEsRUFDRTtRQUFBLE9BQUEsRUFBUyxLQUFLLENBQUMsV0FBZjtRQUNBLGFBQUEsRUFBZSxLQUFLLENBQUMsV0FEckI7T0FKRjtNQU1BLFVBQUEsRUFDRTtRQUFBLGVBQUEsRUFBaUIsQ0FBakI7UUFDQSxjQUFBLEVBQWdCLENBRGhCO1FBRUEsV0FBQSxFQUFhLENBRmI7UUFHQSxNQUFBLEVBQVEsS0FBSyxDQUFDLE1BSGQ7UUFJQSxPQUFBLEVBQVMsQ0FKVDtRQUtBLEdBQUEsRUFBSyxDQUxMO1FBTUEsU0FBQSxFQUFXLENBTlg7UUFPQSxJQUFBLEVBQU0sQ0FQTjtRQVFBLEtBQUEsRUFBTyxDQVJQO1FBU0EsUUFBQSxFQUFVLENBVFY7UUFVQSxLQUFBLEVBQU8sT0FWUDtRQVdBLEtBQUEsRUFBTyxRQVhQO09BUEY7S0FEaUI7RUFOZCxDQXZCUDtFQW1EQSxXQUFBLEVBQWEsU0FBQyxLQUFEO1dBQ1gsVUFBQSxDQUFXLFNBQUE7YUFDVCxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQWIsQ0FBQTtJQURTLENBQVgsRUFHRSxHQUhGO0VBRFcsQ0FuRGI7RUF3REEsV0FBQSxFQUFhLFNBQUMsS0FBRDtXQUNYLEtBQUssQ0FBQyxNQUFOLEdBQWUsS0FBSyxDQUFDLE1BQU8sQ0FBQSxLQUFLLENBQUMsSUFBTjtFQURqQixDQXhEYjs7O0FBOERGLHVCQUFBLEdBQTBCLFNBQUMsS0FBRDtTQUN4QixLQUFLLENBQUMsS0FBTixDQUFZLEtBQVo7QUFEd0IiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJJbmRleCA9XG4gIHBsYXllcjogZmFsc2VcblxuICBzdGF0ZXM6XG4gICAgJy0xJzogJ3Vuc3RhcnRlZCcsXG4gICAgMDogJ2VuZGVkJyxcbiAgICAxOiAncGxheWluZycsXG4gICAgMjogJ3BhdXNlZCcsXG4gICAgMzogJ2J1ZmZlcmluZycsXG4gICAgNTogJ3ZpZGVvIGN1ZWQnXG5cbiAgaTogLT5cblxuICAgIGNvbnNvbGUubG9nICdJbmRleC5pKCknXG4gICAgI0luZGV4Lnl0QXBpKClcblxuICB5dEFwaTogLT5cbiAgICB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50ICdzY3JpcHQnXG4gICAgdGFnLnNyYyA9ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9pZnJhbWVfYXBpJ1xuICAgIHRhZy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCdcbiAgICB0YWcuYXN5bmMgPSB0cnVlXG4gICAgZmlyc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF1cbiAgICBmaXJzdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSB0YWcsIGZpcnN0XG5cbiAgcmVhZHk6IChldmVudCkgLT5cbiAgICBjb25zb2xlLmxvZyAneW91dHViZSBpcyByZWFkeSdcblxuICAgIHdpZHRoID0gJzEwMCUnXG4gICAgaGVpZ2h0ID0gJzEwMCUnXG5cbiAgICBJbmRleC5wbGF5ZXIgPSBuZXcgWVQuUGxheWVyKCd2aWRlbycsXG4gICAgICB3aWR0aDogd2lkdGhcbiAgICAgIGhlaWdodDogaGVpZ2h0XG4gICAgICB2aWRlb0lkOiAnWk54SURXRlZOVmMnXG4gICAgICBldmVudHM6XG4gICAgICAgIG9uUmVhZHk6IEluZGV4LnBsYXllclJlYWR5XG4gICAgICAgIG9uU3RhdGVDaGFuZ2U6IEluZGV4LnN0YXRlQ2hhbmdlXG4gICAgICBwbGF5ZXJWYXJzOlxuICAgICAgICBhbGxvd2Z1bGxzY3JlZW46IDFcbiAgICAgICAgbW9kZXN0YnJhbmRpbmc6IDFcbiAgICAgICAgZW5hYmxlanNhcGk6IDFcbiAgICAgICAgb3JpZ2luOiBJbmRleC5vcmlnaW5cbiAgICAgICAgdmVyc2lvbjogM1xuICAgICAgICByZWw6IDBcbiAgICAgICAgZGlzYWJsZWtiOiAxXG4gICAgICAgIGxvb3A6IDFcbiAgICAgICAgaHRtbDU6IDFcbiAgICAgICAgY29udHJvbHM6IDBcbiAgICAgICAgdGhlbWU6ICdsaWdodCdcbiAgICAgICAgd21vZGU6ICdvcGFxdWUnXG4gICAgKVxuXG4gIHBsYXllclJlYWR5OiAoZXZlbnQpIC0+XG4gICAgc2V0VGltZW91dCAtPlxuICAgICAgSW5kZXgucGxheWVyLnBsYXlWaWRlbygpXG4gICAgICAjSW5kZXgucGxheWVyLm11dGUoKVxuICAgICwgMTAwXG4gIHN0YXRlQ2hhbmdlOiAoZXZlbnQpIC0+XG4gICAgSW5kZXguY3N0YXRlID0gSW5kZXguc3RhdGVzW2V2ZW50LmRhdGFdXG4gICAgI18udCAnRGV0YWlscycsIHdhdGNoLmNzdGF0ZSwgd2F0Y2gudGl0bGVcblxuXG5cbm9uWW91VHViZUlmcmFtZUFQSVJlYWR5ID0gKGV2ZW50KSAtPlxuICBJbmRleC5yZWFkeShldmVudClcblxuIl19
