var Index;

Index = {
  nav: ['definery', 'iterate', 'navigate', 'product'],
  current: 0,
  i: function() {
    return Index.handlers();
  },
  handlers: function() {
    return Detect.handler(Index.navigate);
  },
  navigate: function(direction) {
    var current, previous;
    console.log('Index.navigate() direction: ' + direction);
    previous = Index.nav[Index.current];
    if (direction === 'down' || direction === 'right') {
      if (Index.current === (Index.nav.length - 1)) {
        Index.current = 0;
      } else {
        Index.current++;
      }
    }
    if (direction === 'up' || direction === 'left') {
      if (Index.current === 0) {
        Index.current = Index.nav.length - 1;
      } else {
        Index.current--;
      }
    }
    current = Index.nav[Index.current];
    return Index.transit(previous, current, direction);
  },
  transit: function(previous, current, direction) {
    var j, len, ref, sect;
    ref = Index.nav;
    for (j = 0, len = ref.length; j < len; j++) {
      sect = ref[j];
      if (sect !== current) {
        $('.colors .svg').removeClass(sect);
        $('.border').removeClass(sect);
      }
    }
    $('.colors .svg').addClass(current);
    $('.border').addClass(current);
    _.off($(".content"));
    _.on(".content." + current);
    if (direction === 'down' || direction === 'right') {
      _.on(".background." + current);
      $(".background." + current).addClass('inFromBottom');
      $(".background." + previous).addClass('outToTop');
      setTimeout(function() {
        $(".background." + current).removeClass('inFromBottom');
        $(".background." + previous).removeClass('outToTop');
        return _.off(".background." + previous);
      }, 1000);
    }
    if (direction === 'up' || direction === 'left') {
      $(".background." + current).addClass('inFromTop');
      _.on(".background." + current);
      $(".background." + previous).addClass('outToBottom');
      setTimeout(function() {
        $(".background." + previous).removeClass('outToBottom');
        $(".background." + current).removeClass('inFromTop');
        return _.off(".background." + previous);
      }, 1000);
    }
    return $(".to_" + current).each(function(i, el) {
      return el.beginElement();
    });
  }
};

//# sourceMappingURL=data:application/json;base64,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RSxjQUFBLEdBQWUsT0FBakIsQ0FBMkIsQ0FBQyxRQUE1QixDQUFxQyxXQUFyQztNQUNBLENBQUMsQ0FBQyxFQUFGLENBQUssY0FBQSxHQUFlLE9BQXBCO01BQ0EsQ0FBQSxDQUFFLGNBQUEsR0FBZSxRQUFqQixDQUE0QixDQUFDLFFBQTdCLENBQXNDLGFBQXRDO01BQ0EsVUFBQSxDQUFXLFNBQUE7UUFDVCxDQUFBLENBQUUsY0FBQSxHQUFlLFFBQWpCLENBQTRCLENBQUMsV0FBN0IsQ0FBeUMsYUFBekM7UUFDQSxDQUFBLENBQUUsY0FBQSxHQUFlLE9BQWpCLENBQTJCLENBQUMsV0FBNUIsQ0FBd0MsV0FBeEM7ZUFDQSxDQUFDLENBQUMsR0FBRixDQUFNLGNBQUEsR0FBZSxRQUFyQjtNQUhTLENBQVgsRUFJRSxJQUpGLEVBTEY7O1dBV0EsQ0FBQSxDQUFFLE1BQUEsR0FBTyxPQUFULENBQW1CLENBQUMsSUFBcEIsQ0FBeUIsU0FBQyxDQUFELEVBQUksRUFBSjthQUN2QixFQUFFLENBQUMsWUFBSCxDQUFBO0lBRHVCLENBQXpCO0VBdENPLENBakNUIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiSW5kZXggPVxuXG4gIG5hdjogWydkZWZpbmVyeScsJ2l0ZXJhdGUnLCAnbmF2aWdhdGUnLCAncHJvZHVjdCddXG4gIGN1cnJlbnQ6IDBcblxuICBpOiAtPlxuXG4gICAgSW5kZXguaGFuZGxlcnMoKVxuXG4gIGhhbmRsZXJzOiAtPlxuXG4gICAgRGV0ZWN0LmhhbmRsZXIgSW5kZXgubmF2aWdhdGVcblxuICBuYXZpZ2F0ZTogKGRpcmVjdGlvbikgLT5cblxuICAgIGNvbnNvbGUubG9nICdJbmRleC5uYXZpZ2F0ZSgpIGRpcmVjdGlvbjogJyArIGRpcmVjdGlvblxuXG4gICAgcHJldmlvdXMgPSBJbmRleC5uYXZbSW5kZXguY3VycmVudF1cblxuICAgIGlmIGRpcmVjdGlvbiBpcyAnZG93bicgb3IgZGlyZWN0aW9uIGlzICdyaWdodCdcbiAgICAgIGlmIChJbmRleC5jdXJyZW50ID09IChJbmRleC5uYXYubGVuZ3RoLTEpKVxuICAgICAgICBJbmRleC5jdXJyZW50ID0gMFxuICAgICAgZWxzZVxuICAgICAgICBJbmRleC5jdXJyZW50KytcblxuICAgIGlmIGRpcmVjdGlvbiBpcyAndXAnIG9yIGRpcmVjdGlvbiBpcyAnbGVmdCdcbiAgICAgIGlmIChJbmRleC5jdXJyZW50ID09IDApXG4gICAgICAgIEluZGV4LmN1cnJlbnQgPSBJbmRleC5uYXYubGVuZ3RoLTFcbiAgICAgIGVsc2VcbiAgICAgICAgSW5kZXguY3VycmVudC0tXG5cbiAgICBjdXJyZW50ID0gSW5kZXgubmF2W0luZGV4LmN1cnJlbnRdXG5cbiAgICBJbmRleC50cmFuc2l0KHByZXZpb3VzLCBjdXJyZW50LCBkaXJlY3Rpb24pXG5cbiAgdHJhbnNpdDogKHByZXZpb3VzLCBjdXJyZW50LCBkaXJlY3Rpb24pIC0+XG5cbiAgICBmb3Igc2VjdCBpbiBJbmRleC5uYXZcbiAgICAgIGlmIHNlY3QgaXNudCBjdXJyZW50XG4gICAgICAgICQoJy5jb2xvcnMgLnN2ZycpLnJlbW92ZUNsYXNzIHNlY3RcbiAgICAgICAgJCgnLmJvcmRlcicpLnJlbW92ZUNsYXNzIHNlY3RcblxuICAgICQoJy5jb2xvcnMgLnN2ZycpLmFkZENsYXNzIGN1cnJlbnRcbiAgICAkKCcuYm9yZGVyJykuYWRkQ2xhc3MgY3VycmVudFxuXG4gICAgXy5vZmYgJChcIi5jb250ZW50XCIpXG4gICAgXy5vbiBcIi5jb250ZW50LiN7Y3VycmVudH1cIlxuXG4gICAgaWYgZGlyZWN0aW9uIGlzICdkb3duJyBvciBkaXJlY3Rpb24gaXMgJ3JpZ2h0J1xuXG4gICAgICBfLm9uIFwiLmJhY2tncm91bmQuI3tjdXJyZW50fVwiXG4gICAgICAkKFwiLmJhY2tncm91bmQuI3tjdXJyZW50fVwiKS5hZGRDbGFzcyAnaW5Gcm9tQm90dG9tJ1xuICAgICAgJChcIi5iYWNrZ3JvdW5kLiN7cHJldmlvdXN9XCIpLmFkZENsYXNzICdvdXRUb1RvcCdcbiAgICAgIHNldFRpbWVvdXQgLT5cblxuICAgICAgICAkKFwiLmJhY2tncm91bmQuI3tjdXJyZW50fVwiKS5yZW1vdmVDbGFzcyAnaW5Gcm9tQm90dG9tJ1xuXG4gICAgICAgICQoXCIuYmFja2dyb3VuZC4je3ByZXZpb3VzfVwiKS5yZW1vdmVDbGFzcyAnb3V0VG9Ub3AnXG4gICAgICAgIF8ub2ZmIFwiLmJhY2tncm91bmQuI3twcmV2aW91c31cIlxuXG4gICAgICAsIDEwMDBcblxuICAgIGlmIGRpcmVjdGlvbiBpcyAndXAnIG9yIGRpcmVjdGlvbiBpcyAnbGVmdCdcblxuICAgICAgJChcIi5iYWNrZ3JvdW5kLiN7Y3VycmVudH1cIikuYWRkQ2xhc3MgJ2luRnJvbVRvcCdcbiAgICAgIF8ub24gXCIuYmFja2dyb3VuZC4je2N1cnJlbnR9XCJcbiAgICAgICQoXCIuYmFja2dyb3VuZC4je3ByZXZpb3VzfVwiKS5hZGRDbGFzcyAnb3V0VG9Cb3R0b20nXG4gICAgICBzZXRUaW1lb3V0IC0+XG4gICAgICAgICQoXCIuYmFja2dyb3VuZC4je3ByZXZpb3VzfVwiKS5yZW1vdmVDbGFzcyAnb3V0VG9Cb3R0b20nXG4gICAgICAgICQoXCIuYmFja2dyb3VuZC4je2N1cnJlbnR9XCIpLnJlbW92ZUNsYXNzICdpbkZyb21Ub3AnXG4gICAgICAgIF8ub2ZmIFwiLmJhY2tncm91bmQuI3twcmV2aW91c31cIlxuICAgICAgLCAxMDAwXG5cbiAgICAkKFwiLnRvXyN7Y3VycmVudH1cIikuZWFjaCAoaSwgZWwpIC0+XG4gICAgICBlbC5iZWdpbkVsZW1lbnQoKVxuXG4iXX0=
