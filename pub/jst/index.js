var Index;

Index = {
  nav: ['definery', 'iterate', 'navigate', 'product'],
  timeout: 1000,
  paused: false,
  tl: false,
  colors: {
    'definery': data.color.teal1,
    'iterate': data.color.blue1,
    'navigate': data.color.green1,
    'product': data.color.pink1
  },
  current: 0,
  menuNum: 1,
  menuOptions: ['about', 'work', 'services', 'contact'],
  menuSwiping: false,
  i: function() {
    return Index.handlers();
  },
  handlers: function() {
    $('.nav').on('click', Index.navHandler);
    $('.dots > .dot').on('click', Index.dotHandler);
    $('.menu > .option').on('click', Index.menuHandler);
    $('.section > .logo').on('click', function() {
      return $('.menu > .option.option_about').trigger('click');
    });
    $('.prod_contact_cta').on('click', Index.contact);
    $(document).on('touchmove', function() {
      return event.preventDefault();
    });
    Detect.handler(Index.navigate);
    return $('.content > .inner > .tapspace').swipe({
      swipe: function(event, direction, distance, duration, fingerCount) {
        Index.navigate(direction);
      },
      tap: function(event, target) {
        return console.log('tap');
      },
      click: function(event, target) {
        return console.log('click');
      },
      threshold: 0
    });
  },
  contact: function() {
    return $('.menu > .option.option_contact').trigger('click');
  },
  menuHandler: function() {
    var current, dir, i, len, num, option, ref;
    if (Index.menuSwiping === true) {
      return true;
    }
    Index.menuSwiping = true;
    current = $(this).data('option');
    num = $(this).data('num');
    if ($(".option_" + current).hasClass('on')) {
      Index.menuSwiping = false;
      return true;
    }
    _.off('.menu > .option');
    _.on(".option_" + current);
    ref = Index.menuOptions;
    for (i = 0, len = ref.length; i < len; i++) {
      option = ref[i];
      $('.swiper').removeClass("swiper_" + option);
    }
    if (num > Index.menuNum) {
      dir = 'right';
    } else {
      dir = 'left';
    }
    Index.menuNum = num;
    $(".swiper." + dir).addClass("swiper_" + current);
    _.on(".swiper." + dir);
    setTimeout(function() {
      _.off(".swiper." + dir);
      return Index.menuSwiping = false;
    }, 750);
    return setTimeout(function() {
      _.off('.section');
      if (current !== 'about') {
        return _.on(".section." + current);
      }
    }, 300);
  },
  navHandler: function() {
    var current, direction, previous, t;
    if (Index.paused) {
      return true;
    }
    t = $(this);
    previous = t.data('from');
    current = t.data('to');
    direction = t.data('dir');
    Index.transit(previous, current, direction);
    Index.paused = true;
    return setTimeout(function() {
      return Index.paused = false;
    }, Index.timeout);
  },
  dotHandler: function() {
    var cnum, current, direction, pnum, previous;
    if (Index.paused) {
      return true;
    }
    previous = $('.dots .dot.on').data('sect');
    pnum = $('.dots .dot.on').data('num');
    current = $(this).data('sect');
    cnum = $(this).data('num');
    if (cnum > pnum) {
      direction = 'down';
    } else {
      direction = 'up';
    }
    Index.transit(previous, current, direction);
    Index.paused = true;
    Index.current = cnum;
    return setTimeout(function() {
      return Index.paused = false;
    }, Index.timeout);
  },
  navigate: function(direction) {
    var current, previous;
    if ($('.menu > .option.option_contact').hasClass('on')) {
      return true;
    }
    if ($('.menu > .option.option_services').hasClass('on')) {
      return true;
    }
    if ($('.menu > .option.option_work').hasClass('on')) {
      return true;
    }
    if (Index.paused) {
      return true;
    }
    previous = Index.nav[Index.current];
    if (direction === 'down' || direction === 'right') {
      if (Index.current === (Index.nav.length - 1)) {
        return true;
      } else {
        Index.current++;
      }
    }
    if (direction === 'up' || direction === 'left') {
      if (Index.current === 0) {
        return true;
      } else {
        Index.current--;
      }
    }
    current = Index.nav[Index.current];
    Index.transit(previous, current, direction);
    Index.paused = true;
    return setTimeout(function() {
      return Index.paused = false;
    }, Index.timeout);
  },
  transit: function(previous, current, direction) {
    var i, len, ref, sect, tl;
    if (previous === void 0) {
      return true;
    }
    if (current !== 'definery') {
      _.on('.arrow.up');
    } else {
      _.off('.arrow.up');
    }
    setTimeout(function() {
      $('meta[name=theme-color]').remove();
      return $('head').append('<meta name="theme-color" content="' + Index.colors[current] + '">');
    }, 500);
    ref = Index.nav;
    for (i = 0, len = ref.length; i < len; i++) {
      sect = ref[i];
      if (sect !== current) {
        $('.colors .svg').removeClass("star_" + sect);
        $('.border').removeClass(sect);
        $('.bgcolor').removeClass(sect);
      }
    }
    $('.colors .svg').addClass("star_" + current);
    $('.border').addClass(current);
    $('.bgcolor').addClass(current);
    if (direction === 'down' || direction === 'right') {
      _.on(".background." + current);
      $(".background." + current).addClass('inFromBottom');
      $(".background." + previous).addClass('outToTop');
      _.on(".content." + current);
      $(".content." + current).addClass('cInFromBottom');
      $(".content." + previous).addClass('cOutToTop');
      setTimeout(function() {
        var j, len1, ref1, results;
        $(".background." + current).removeClass('inFromBottom');
        $(".background." + previous).removeClass('outToTop');
        $(".content." + current).removeClass('cInFromBottom');
        $(".content." + previous).removeClass('cOutToTop');
        ref1 = Index.nav;
        results = [];
        for (j = 0, len1 = ref1.length; j < len1; j++) {
          sect = ref1[j];
          if (sect !== current) {
            _.off(".background." + sect);
            results.push(_.off(".content." + sect));
          } else {
            results.push(void 0);
          }
        }
        return results;
      }, 1000);
    }
    if (direction === 'up' || direction === 'left') {
      _.on(".background." + current);
      $(".background." + current).addClass('inFromTop');
      $(".background." + previous).addClass('outToBottom');
      _.on(".content." + current);
      $(".content." + current).addClass('cInFromTop');
      $(".content." + previous).addClass('cOutToBottom');
      setTimeout(function() {
        var j, len1, ref1, results;
        $(".background." + previous).removeClass('outToBottom');
        $(".background." + current).removeClass('inFromTop');
        $(".content." + previous).removeClass('cOutToBottom');
        $(".content." + current).removeClass('cInFromTop');
        ref1 = Index.nav;
        results = [];
        for (j = 0, len1 = ref1.length; j < len1; j++) {
          sect = ref1[j];
          if (sect !== current) {
            _.off(".background." + sect);
            results.push(_.off(".content." + sect));
          } else {
            results.push(void 0);
          }
        }
        return results;
      }, 1000);
    }
    _.off('.dots > .dot');
    _.on(".dots > .dot.dot_" + current);
    tl = new TimelineMax({
      repeat: 0
    });
    return tl.to(".d1", 0.8, {
      morphSVG: "." + current + "1",
      ease: Power3.easeInOut
    }, '-=0.8').to(".d2", 0.8, {
      morphSVG: "." + current + "2",
      ease: Power3.easeInOut
    }, '-=0.8').to(".d3", 0.8, {
      morphSVG: "." + current + "3",
      ease: Power3.easeInOut
    }, '-=0.8');
  }
};

//# sourceMappingURL=data:application/json;base64,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LEVBSEgsQ0FHTSxLQUhOLEVBR2EsR0FIYixFQUdrQjtNQUFDLFFBQUEsRUFBVSxHQUFBLEdBQUksT0FBSixHQUFZLEdBQXZCO01BQTJCLElBQUEsRUFBSyxNQUFNLENBQUMsU0FBdkM7S0FIbEIsRUFHcUUsT0FIckU7RUE1RU8sQ0ExSlQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJJbmRleCA9XG5cbiAgbmF2OiBbJ2RlZmluZXJ5JywnaXRlcmF0ZScsICduYXZpZ2F0ZScsICdwcm9kdWN0J11cbiAgdGltZW91dDogMTAwMFxuICBwYXVzZWQ6IGZhbHNlXG5cbiAgdGw6IGZhbHNlXG5cbiAgY29sb3JzOlxuICAgICdkZWZpbmVyeSc6IGRhdGEuY29sb3IudGVhbDFcbiAgICAnaXRlcmF0ZSc6IGRhdGEuY29sb3IuYmx1ZTFcbiAgICAnbmF2aWdhdGUnOiBkYXRhLmNvbG9yLmdyZWVuMVxuICAgICdwcm9kdWN0JzogZGF0YS5jb2xvci5waW5rMVxuXG4gIGN1cnJlbnQ6IDBcblxuICBtZW51TnVtOiAxXG4gIG1lbnVPcHRpb25zOiBbJ2Fib3V0Jywnd29yaycsJ3NlcnZpY2VzJywnY29udGFjdCddXG4gIG1lbnVTd2lwaW5nOiBmYWxzZVxuXG4gIGk6IC0+XG5cbiAgICBJbmRleC5oYW5kbGVycygpXG5cbiAgaGFuZGxlcnM6IC0+XG5cblxuICAgICQoJy5uYXYnKS5vbiAnY2xpY2snLCBJbmRleC5uYXZIYW5kbGVyXG4gICAgJCgnLmRvdHMgPiAuZG90Jykub24gJ2NsaWNrJywgSW5kZXguZG90SGFuZGxlclxuICAgICQoJy5tZW51ID4gLm9wdGlvbicpLm9uICdjbGljaycsIEluZGV4Lm1lbnVIYW5kbGVyXG4gICAgJCgnLnNlY3Rpb24gPiAubG9nbycpLm9uICdjbGljaycsIC0+XG4gICAgICAkKCcubWVudSA+IC5vcHRpb24ub3B0aW9uX2Fib3V0JykudHJpZ2dlciAnY2xpY2snXG5cblxuICAgICQoJy5wcm9kX2NvbnRhY3RfY3RhJykub24gJ2NsaWNrJywgSW5kZXguY29udGFjdFxuXG4gICAgJChkb2N1bWVudCkub24gJ3RvdWNobW92ZScsIC0+XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICBEZXRlY3QuaGFuZGxlciBJbmRleC5uYXZpZ2F0ZVxuICAgICQoJy5jb250ZW50ID4gLmlubmVyID4gLnRhcHNwYWNlJykuc3dpcGVcbiAgICAgIHN3aXBlOiAoZXZlbnQsIGRpcmVjdGlvbiwgZGlzdGFuY2UsIGR1cmF0aW9uLCBmaW5nZXJDb3VudCkgLT5cbiAgICAgICAgSW5kZXgubmF2aWdhdGUgZGlyZWN0aW9uXG4gICAgICAgIHJldHVyblxuICAgICAgdGFwOiAoZXZlbnQsIHRhcmdldCkgLT5cbiAgICAgICAgY29uc29sZS5sb2cgJ3RhcCdcbiAgICAgIGNsaWNrOiAoZXZlbnQsIHRhcmdldCkgLT5cbiAgICAgICAgY29uc29sZS5sb2cgJ2NsaWNrJ1xuICAgICAgdGhyZXNob2xkOiAwXG5cblxuICBjb250YWN0OiAtPlxuICAgICQoJy5tZW51ID4gLm9wdGlvbi5vcHRpb25fY29udGFjdCcpLnRyaWdnZXIgJ2NsaWNrJ1xuXG4gIG1lbnVIYW5kbGVyOiAtPlxuICAgIHJldHVybiB0cnVlIGlmIEluZGV4Lm1lbnVTd2lwaW5nIGlzIHRydWVcbiAgICBJbmRleC5tZW51U3dpcGluZyA9IHRydWVcblxuICAgIGN1cnJlbnQgPSAkKHRoaXMpLmRhdGEgJ29wdGlvbidcbiAgICBudW0gPSAkKHRoaXMpLmRhdGEgJ251bSdcblxuICAgIGlmICQoXCIub3B0aW9uXyN7Y3VycmVudH1cIikuaGFzQ2xhc3MgJ29uJ1xuICAgICAgSW5kZXgubWVudVN3aXBpbmcgPSBmYWxzZVxuICAgICAgcmV0dXJuIHRydWVcblxuICAgIF8ub2ZmICcubWVudSA+IC5vcHRpb24nXG4gICAgXy5vbiBcIi5vcHRpb25fI3tjdXJyZW50fVwiXG5cbiAgICBmb3Igb3B0aW9uIGluIEluZGV4Lm1lbnVPcHRpb25zXG4gICAgICAkKCcuc3dpcGVyJykucmVtb3ZlQ2xhc3MoXCJzd2lwZXJfI3tvcHRpb259XCIpXG5cbiAgICBpZiBudW0gPiBJbmRleC5tZW51TnVtIHRoZW4gZGlyID0gJ3JpZ2h0JyBlbHNlIGRpciA9ICdsZWZ0J1xuICAgIEluZGV4Lm1lbnVOdW0gPSBudW1cblxuICAgICQoXCIuc3dpcGVyLiN7ZGlyfVwiKS5hZGRDbGFzcyhcInN3aXBlcl8je2N1cnJlbnR9XCIpXG4gICAgXy5vbiBcIi5zd2lwZXIuI3tkaXJ9XCJcbiAgICBzZXRUaW1lb3V0IC0+XG4gICAgICBfLm9mZiBcIi5zd2lwZXIuI3tkaXJ9XCJcbiAgICAgIEluZGV4Lm1lbnVTd2lwaW5nID0gZmFsc2VcbiAgICAsIDc1MFxuXG4gICAgc2V0VGltZW91dCAtPlxuICAgICAgXy5vZmYgJy5zZWN0aW9uJ1xuICAgICAgaWYgY3VycmVudCBpc250ICdhYm91dCdcbiAgICAgICAgXy5vbiBcIi5zZWN0aW9uLiN7Y3VycmVudH1cIlxuICAgICwgMzAwXG5cbiAgbmF2SGFuZGxlcjogLT5cblxuICAgIHJldHVybiB0cnVlIGlmIEluZGV4LnBhdXNlZFxuICAgIHQgPSAkKHRoaXMpXG5cbiAgICBwcmV2aW91cyA9IHQuZGF0YSAnZnJvbSdcbiAgICBjdXJyZW50ID0gdC5kYXRhICd0bydcbiAgICBkaXJlY3Rpb24gPSB0LmRhdGEgJ2RpcidcblxuICAgIEluZGV4LnRyYW5zaXQocHJldmlvdXMsIGN1cnJlbnQsIGRpcmVjdGlvbilcblxuICAgIEluZGV4LnBhdXNlZCA9IHRydWVcbiAgICBzZXRUaW1lb3V0IC0+XG4gICAgICBJbmRleC5wYXVzZWQgPSBmYWxzZVxuICAgICxJbmRleC50aW1lb3V0XG5cblxuICBkb3RIYW5kbGVyOiAtPlxuXG4gICAgcmV0dXJuIHRydWUgaWYgSW5kZXgucGF1c2VkXG5cbiAgICBwcmV2aW91cyA9ICQoJy5kb3RzIC5kb3Qub24nKS5kYXRhICdzZWN0J1xuICAgIHBudW0gPSAkKCcuZG90cyAuZG90Lm9uJykuZGF0YSAnbnVtJ1xuICAgIGN1cnJlbnQgPSAkKHRoaXMpLmRhdGEgJ3NlY3QnXG4gICAgY251bSA9ICQodGhpcykuZGF0YSAnbnVtJ1xuXG4gICAgaWYgY251bSA+IHBudW0gdGhlbiBkaXJlY3Rpb24gPSAnZG93bicgZWxzZSBkaXJlY3Rpb24gPSAndXAnXG5cbiAgICBJbmRleC50cmFuc2l0IHByZXZpb3VzLCBjdXJyZW50LCBkaXJlY3Rpb25cblxuICAgIEluZGV4LnBhdXNlZCA9IHRydWVcbiAgICBJbmRleC5jdXJyZW50ID0gY251bVxuICAgIHNldFRpbWVvdXQgLT5cbiAgICAgIEluZGV4LnBhdXNlZCA9IGZhbHNlXG4gICAgLCBJbmRleC50aW1lb3V0XG5cbiAgbmF2aWdhdGU6IChkaXJlY3Rpb24pIC0+XG5cbiAgICByZXR1cm4gdHJ1ZSBpZiAkKCcubWVudSA+IC5vcHRpb24ub3B0aW9uX2NvbnRhY3QnKS5oYXNDbGFzcygnb24nKVxuICAgIHJldHVybiB0cnVlIGlmICQoJy5tZW51ID4gLm9wdGlvbi5vcHRpb25fc2VydmljZXMnKS5oYXNDbGFzcygnb24nKVxuICAgIHJldHVybiB0cnVlIGlmICQoJy5tZW51ID4gLm9wdGlvbi5vcHRpb25fd29yaycpLmhhc0NsYXNzKCdvbicpXG5cbiAgICByZXR1cm4gdHJ1ZSBpZiBJbmRleC5wYXVzZWRcblxuICAgIHByZXZpb3VzID0gSW5kZXgubmF2W0luZGV4LmN1cnJlbnRdXG5cbiAgICBpZiBkaXJlY3Rpb24gaXMgJ2Rvd24nIG9yIGRpcmVjdGlvbiBpcyAncmlnaHQnXG4gICAgICBpZiAoSW5kZXguY3VycmVudCA9PSAoSW5kZXgubmF2Lmxlbmd0aC0xKSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgI0luZGV4LmN1cnJlbnQgPSAwXG4gICAgICBlbHNlXG4gICAgICAgIEluZGV4LmN1cnJlbnQrK1xuXG4gICAgaWYgZGlyZWN0aW9uIGlzICd1cCcgb3IgZGlyZWN0aW9uIGlzICdsZWZ0J1xuICAgICAgaWYgKEluZGV4LmN1cnJlbnQgPT0gMClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgI0luZGV4LmN1cnJlbnQgPSBJbmRleC5uYXYubGVuZ3RoLTFcbiAgICAgIGVsc2VcbiAgICAgICAgSW5kZXguY3VycmVudC0tXG5cbiAgICBjdXJyZW50ID0gSW5kZXgubmF2W0luZGV4LmN1cnJlbnRdXG5cbiAgICBJbmRleC50cmFuc2l0KHByZXZpb3VzLCBjdXJyZW50LCBkaXJlY3Rpb24pXG5cbiAgICBJbmRleC5wYXVzZWQgPSB0cnVlXG4gICAgc2V0VGltZW91dCAtPlxuICAgICAgSW5kZXgucGF1c2VkID0gZmFsc2VcbiAgICAsIEluZGV4LnRpbWVvdXRcblxuICB0cmFuc2l0OiAocHJldmlvdXMsIGN1cnJlbnQsIGRpcmVjdGlvbikgLT5cblxuICAgIHJldHVybiB0cnVlIGlmIHByZXZpb3VzIGlzIHVuZGVmaW5lZFxuXG4gICAgaWYgY3VycmVudCBpc250ICdkZWZpbmVyeScgdGhlbiBfLm9uICcuYXJyb3cudXAnIGVsc2UgXy5vZmYgJy5hcnJvdy51cCdcblxuICAgICMgaSB3aWxsIGNoZXN0YnVtcCBteSBtb25pdG9yIGlmIHRoaXMgd29ya3NcbiAgICBzZXRUaW1lb3V0IC0+XG4gICAgICAkKCdtZXRhW25hbWU9dGhlbWUtY29sb3JdJykucmVtb3ZlKClcbiAgICAgICQoJ2hlYWQnKS5hcHBlbmQoJzxtZXRhIG5hbWU9XCJ0aGVtZS1jb2xvclwiIGNvbnRlbnQ9XCInICsgSW5kZXguY29sb3JzW2N1cnJlbnRdICsgJ1wiPicpXG4gICAgLCA1MDBcblxuICAgIGZvciBzZWN0IGluIEluZGV4Lm5hdlxuICAgICAgaWYgc2VjdCBpc250IGN1cnJlbnRcbiAgICAgICAgJCgnLmNvbG9ycyAuc3ZnJykucmVtb3ZlQ2xhc3MgXCJzdGFyXyN7c2VjdH1cIlxuICAgICAgICAkKCcuYm9yZGVyJykucmVtb3ZlQ2xhc3Mgc2VjdFxuICAgICAgICAkKCcuYmdjb2xvcicpLnJlbW92ZUNsYXNzIHNlY3RcblxuICAgICQoJy5jb2xvcnMgLnN2ZycpLmFkZENsYXNzIFwic3Rhcl8je2N1cnJlbnR9XCJcbiAgICAkKCcuYm9yZGVyJykuYWRkQ2xhc3MgY3VycmVudFxuICAgICQoJy5iZ2NvbG9yJykuYWRkQ2xhc3MgY3VycmVudFxuXG4gICAgaWYgZGlyZWN0aW9uIGlzICdkb3duJyBvciBkaXJlY3Rpb24gaXMgJ3JpZ2h0J1xuXG4gICAgICBfLm9uIFwiLmJhY2tncm91bmQuI3tjdXJyZW50fVwiXG4gICAgICAkKFwiLmJhY2tncm91bmQuI3tjdXJyZW50fVwiKS5hZGRDbGFzcyAnaW5Gcm9tQm90dG9tJ1xuICAgICAgJChcIi5iYWNrZ3JvdW5kLiN7cHJldmlvdXN9XCIpLmFkZENsYXNzICdvdXRUb1RvcCdcblxuICAgICAgXy5vbiBcIi5jb250ZW50LiN7Y3VycmVudH1cIlxuICAgICAgJChcIi5jb250ZW50LiN7Y3VycmVudH1cIikuYWRkQ2xhc3MgJ2NJbkZyb21Cb3R0b20nXG4gICAgICAkKFwiLmNvbnRlbnQuI3twcmV2aW91c31cIikuYWRkQ2xhc3MgJ2NPdXRUb1RvcCdcblxuICAgICAgc2V0VGltZW91dCAtPlxuXG4gICAgICAgICQoXCIuYmFja2dyb3VuZC4je2N1cnJlbnR9XCIpLnJlbW92ZUNsYXNzICdpbkZyb21Cb3R0b20nXG4gICAgICAgICQoXCIuYmFja2dyb3VuZC4je3ByZXZpb3VzfVwiKS5yZW1vdmVDbGFzcyAnb3V0VG9Ub3AnXG5cbiAgICAgICAgJChcIi5jb250ZW50LiN7Y3VycmVudH1cIikucmVtb3ZlQ2xhc3MgJ2NJbkZyb21Cb3R0b20nXG4gICAgICAgICQoXCIuY29udGVudC4je3ByZXZpb3VzfVwiKS5yZW1vdmVDbGFzcyAnY091dFRvVG9wJ1xuXG4gICAgICAgIGZvciBzZWN0IGluIEluZGV4Lm5hdlxuICAgICAgICAgIGlmIHNlY3QgaXNudCBjdXJyZW50XG4gICAgICAgICAgICBfLm9mZiBcIi5iYWNrZ3JvdW5kLiN7c2VjdH1cIlxuICAgICAgICAgICAgXy5vZmYgXCIuY29udGVudC4je3NlY3R9XCJcblxuICAgICAgLCAxMDAwXG5cbiAgICBpZiBkaXJlY3Rpb24gaXMgJ3VwJyBvciBkaXJlY3Rpb24gaXMgJ2xlZnQnXG5cbiAgICAgIF8ub24gXCIuYmFja2dyb3VuZC4je2N1cnJlbnR9XCJcbiAgICAgICQoXCIuYmFja2dyb3VuZC4je2N1cnJlbnR9XCIpLmFkZENsYXNzICdpbkZyb21Ub3AnXG4gICAgICAkKFwiLmJhY2tncm91bmQuI3twcmV2aW91c31cIikuYWRkQ2xhc3MgJ291dFRvQm90dG9tJ1xuXG4gICAgICBfLm9uIFwiLmNvbnRlbnQuI3tjdXJyZW50fVwiXG4gICAgICAkKFwiLmNvbnRlbnQuI3tjdXJyZW50fVwiKS5hZGRDbGFzcyAnY0luRnJvbVRvcCdcbiAgICAgICQoXCIuY29udGVudC4je3ByZXZpb3VzfVwiKS5hZGRDbGFzcyAnY091dFRvQm90dG9tJ1xuXG4gICAgICBzZXRUaW1lb3V0IC0+XG5cbiAgICAgICAgJChcIi5iYWNrZ3JvdW5kLiN7cHJldmlvdXN9XCIpLnJlbW92ZUNsYXNzICdvdXRUb0JvdHRvbSdcbiAgICAgICAgJChcIi5iYWNrZ3JvdW5kLiN7Y3VycmVudH1cIikucmVtb3ZlQ2xhc3MgJ2luRnJvbVRvcCdcblxuICAgICAgICAkKFwiLmNvbnRlbnQuI3twcmV2aW91c31cIikucmVtb3ZlQ2xhc3MgJ2NPdXRUb0JvdHRvbSdcbiAgICAgICAgJChcIi5jb250ZW50LiN7Y3VycmVudH1cIikucmVtb3ZlQ2xhc3MgJ2NJbkZyb21Ub3AnXG5cbiAgICAgICAgZm9yIHNlY3QgaW4gSW5kZXgubmF2XG4gICAgICAgICAgaWYgc2VjdCBpc250IGN1cnJlbnRcbiAgICAgICAgICAgIF8ub2ZmIFwiLmJhY2tncm91bmQuI3tzZWN0fVwiXG4gICAgICAgICAgICBfLm9mZiBcIi5jb250ZW50LiN7c2VjdH1cIlxuXG4gICAgICAsIDEwMDBcblxuICAgIF8ub2ZmICcuZG90cyA+IC5kb3QnXG4gICAgXy5vbiBcIi5kb3RzID4gLmRvdC5kb3RfI3tjdXJyZW50fVwiXG5cbiAgICB0bCA9IG5ldyBUaW1lbGluZU1heCh7cmVwZWF0OiAwfSlcbiAgICB0bFxuICAgICAgLnRvKFwiLmQxXCIsIDAuOCwge21vcnBoU1ZHOiBcIi4je2N1cnJlbnR9MVwiLCBlYXNlOlBvd2VyMy5lYXNlSW5PdXR9LCAnLT0wLjgnKVxuICAgICAgLnRvKFwiLmQyXCIsIDAuOCwge21vcnBoU1ZHOiBcIi4je2N1cnJlbnR9MlwiLCBlYXNlOlBvd2VyMy5lYXNlSW5PdXR9LCAnLT0wLjgnKVxuICAgICAgLnRvKFwiLmQzXCIsIDAuOCwge21vcnBoU1ZHOiBcIi4je2N1cnJlbnR9M1wiLCBlYXNlOlBvd2VyMy5lYXNlSW5PdXR9LCAnLT0wLjgnKVxuXG5cbiJdfQ==
