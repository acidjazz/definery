var Detect;

Detect = {
  timeout: 1000,
  paused: false,
  xDown: null,
  yDown: null,
  i: function() {
    return console.log('Detect.i()');
  },
  handler: function(callback) {
    $(document).bind('touchstart', function(e) {
      if (Detect.paused) {
        return true;
      }
      Detect.xDown = e.originalEvent.touches[0].clientX;
      return Detect.yDown = e.originalEvent.touches[0].clientY;
    });
    $(document).bind('touchmove', function(e) {
      var xDiff, xUp, yDiff, yUp;
      if (Detect.paused) {
        return true;
      }
      xUp = e.originalEvent.touches[0].clientX;
      yUp = e.originalEvent.touches[0].clientY;
      xDiff = Detect.xDown - xUp;
      yDiff = Detect.yDown - yUp;
      if (xDiff > 50) {
        callback('left');
      } else {
        callback('right');
      }
      Detect.pause();
      return true;
      if (yDiff > 50) {
        callback('down');
      } else {
        callback('up');
      }
      Detect.pause();
      return true;
    });
    $(document).bind('mousewheel', function(e) {
      var wheel;
      if (Detect.paused) {
        return true;
      }
      wheel = e.originalEvent.wheelDelta;
      if (Math.abs(wheel) > 200) {
        if (wheel < 0) {
          callback('down');
        } else {
          callback('up');
        }
        return Detect.pause();
      }
    });
    return $(document).bind('DOMMouseScroll', function(e) {
      if (e.originalEvent.detail > 0) {
        callback('down');
      } else {
        callback('up');
      }
      return Detect.pause();
    });
  },
  pause: function() {
    Detect.paused = true;
    return setTimeout(function() {
      return Detect.paused = false;
    }, Detect.timeout);
  }
};

//# sourceMappingURL=data:application/json;base64,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anMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJEZXRlY3QgPVxuXG4gIHRpbWVvdXQ6IDEwMDBcbiAgcGF1c2VkOiBmYWxzZVxuICB4RG93bjogbnVsbFxuICB5RG93bjogbnVsbFxuXG4gIGk6IC0+XG5cbiAgICBjb25zb2xlLmxvZyAnRGV0ZWN0LmkoKSdcblxuICBoYW5kbGVyOiAoY2FsbGJhY2spIC0+XG5cbiAgICAkKGRvY3VtZW50KS5iaW5kICd0b3VjaHN0YXJ0JywgKGUpIC0+XG4gICAgICByZXR1cm4gdHJ1ZSBpZiBEZXRlY3QucGF1c2VkXG4gICAgICBEZXRlY3QueERvd24gPSBlLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXS5jbGllbnRYXG4gICAgICBEZXRlY3QueURvd24gPSBlLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXS5jbGllbnRZXG5cbiAgICAkKGRvY3VtZW50KS5iaW5kICd0b3VjaG1vdmUnLCAoZSkgLT5cbiAgICAgIHJldHVybiB0cnVlIGlmIERldGVjdC5wYXVzZWRcblxuICAgICAgeFVwID0gZS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WFxuICAgICAgeVVwID0gZS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WVxuXG4gICAgICB4RGlmZiA9IERldGVjdC54RG93biAtIHhVcFxuICAgICAgeURpZmYgPSBEZXRlY3QueURvd24gLSB5VXBcblxuICAgICAgaWYgeERpZmYgPiA1MCB0aGVuIGNhbGxiYWNrICdsZWZ0JyBlbHNlIGNhbGxiYWNrICdyaWdodCdcbiAgICAgIERldGVjdC5wYXVzZSgpXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgICAgaWYgeURpZmYgPiA1MCB0aGVuIGNhbGxiYWNrICdkb3duJyBlbHNlIGNhbGxiYWNrICd1cCdcbiAgICAgIERldGVjdC5wYXVzZSgpXG4gICAgICByZXR1cm4gdHJ1ZVxuXG4gICAgJChkb2N1bWVudCkuYmluZCAnbW91c2V3aGVlbCcsIChlKSAtPlxuXG4gICAgICByZXR1cm4gdHJ1ZSBpZiBEZXRlY3QucGF1c2VkXG4gICAgICB3aGVlbCA9IGUub3JpZ2luYWxFdmVudC53aGVlbERlbHRhXG4gICAgICBpZiBNYXRoLmFicyh3aGVlbCkgPiAyMDBcbiAgICAgICAgaWYgd2hlZWwgPCAwIHRoZW4gY2FsbGJhY2sgJ2Rvd24nIGVsc2UgY2FsbGJhY2sgJ3VwJ1xuICAgICAgICBEZXRlY3QucGF1c2UoKVxuXG4gICAgJChkb2N1bWVudCkuYmluZCAnRE9NTW91c2VTY3JvbGwnLCAoZSkgLT5cblxuICAgICAgaWYgZS5vcmlnaW5hbEV2ZW50LmRldGFpbCA+IDAgdGhlbiBjYWxsYmFjayAnZG93bicgZWxzZSBjYWxsYmFjayAndXAnXG4gICAgICBEZXRlY3QucGF1c2UoKVxuXG4gIHBhdXNlOiAoKSAtPlxuICAgIERldGVjdC5wYXVzZWQgPSB0cnVlXG4gICAgc2V0VGltZW91dCAtPlxuICAgICAgRGV0ZWN0LnBhdXNlZCA9IGZhbHNlXG4gICAgLCBEZXRlY3QudGltZW91dFxuXG4iXX0=
